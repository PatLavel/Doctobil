openapi: 3.0.0
info:
  title: 'Swagger Petstore'
  description: "This is a sample Petstore server.  You can find\r\n *     out more about Swagger at [http://swagger.io](http://swagger.io) \r\n *     or on [irc.freenode.net, #swagger](http://swagger.io/irc/)."
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
paths:
  /Docteur:
    post:
      tags:
        - Docteur
      operationId: addDocteur
      requestBody:
        $ref: '#/components/requestBodies/DocteurDTO'
      responses:
        '405':
          description: 'Invalid input'
  /Patient:
    post:
      tags:
        - patient
      operationId: create
      requestBody:
        $ref: '#/components/requestBodies/PatientDTO'
      responses:
        '201':
          description: 'Patient created'
        '405':
          description: 'Input Invalid'
  /Rdv:
    post:
      tags:
        - Rdv
      operationId: addRdv
      requestBody:
        $ref: '#/components/requestBodies/RdvDTO'
      responses:
        '405':
          description: rdvAdd
components:
  schemas:
    DocteurDTO:
      title: DocteurDTO
      description: DocteurDTO
      required:
        - nom
        - prenom
        - mail
        - telephone
        - ville
        - adresse
        - specialite
      properties:
        nom:
          title: 'Docteur nom'
          description: 'Docteur nom'
          type: string
        prenom:
          title: 'Docteur prenom'
          description: 'Docteur prenom'
          type: string
        mail:
          title: 'Docteur mail'
          description: 'Docteur mail'
          type: string
        specialite:
          title: 'Docteur specialite'
          description: 'Docteur specialite'
          type: string
        telephone:
          title: 'Docteur telephone'
          description: 'Docteur telephone'
          type: string
        ville:
          title: 'Docteur ville'
          description: 'Docteur ville'
          type: string
        adresse:
          title: 'Docteur adresse'
          description: 'Docteur adresse'
          type: string
      type: object
    PatientDTO:
      title: 'Le PatientDTO'
      description: PatientDTO
      required:
        - nom
        - prenom
        - noSecu
        - ddn
        - adresse
        - ville
        - telephone
        - mail
      properties:
        nom:
          title: NomPatientDTO
          description: NomPatientDTO
        noSecu:
          title: NoSecuPatientDTO
          description: NoSecuPatientDTO
          type: integer
        prenom:
          title: PrenomPatientDTO
          description: PrenomPatientDTO
        adresse:
          title: AdressePatientDTO
          description: AdressePatientDTO
        ville:
          title: VillePatientDTO
          description: VillePatientDTO
        mail:
          title: MailPatientDTO
          description: MailPatientDTO
        telephone:
          title: TelephonePatientDTO
          description: TelephonePatientDTO
        sexe:
          title: SexePatientDTO
          description: SexePatientDTO
        ddn:
          title: DdnPatientDTO
          description: DdnPatientDTO
      type: object
    RdvDTO:
      title: RdvDTO
      description: RdvDTO
      required:
        - date
        - heure
        - lieu
        - idDoc
        - idPat
      properties:
        date:
          title: 'Rdv date'
          description: 'Rdv date'
        lieu:
          title: 'Rdv lieu'
          description: 'Rdv lieu'
          type: string
        heure:
          title: 'Rdv heure'
          description: 'Rdv heure'
        idDoc:
          $ref: '#/components/schemas/DocteurDTO'
        idPat:
          $ref: '#/components/schemas/PatientDTO'
        docteurDTO:
          $ref: '#/components/schemas/DocteurDTO'
        patientDTO:
          $ref: '#/components/schemas/PatientDTO'
      type: object
  requestBodies:
    DocteurDTO:
      description: 'Docteur object that needs to be added'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocteurDTO'
    RdvDTO:
      description: 'Rdv object that needs to be added'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RdvDTO'
    PatientDTO:
      description: 'Patient object that needs to be added'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatientDTO'
